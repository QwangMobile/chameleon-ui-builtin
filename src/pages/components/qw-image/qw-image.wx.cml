<template>
<origin-image style='{{imageStyle}}' mode='{{getAspectModel}}' lazy-load='{{true}}' src='{{realImagePath?realImagePath:placeholderImg}}' binderror="imageError"></origin-image>
</template>

<script>
class QwImage implements QwImageInterface {
  props = {
    imagePath: {
      type: String,
      default: ""
    },
    showStyle: {
      type: String,
      default: ""
    },
    placeholderImg: {
      type: String,
      default: require('./imageload_error.png')
    },
    fitStyle: {
      type: String,
      default: "cover"
    }
  }

  data = {
    realImagePath: ""
  }

  computed = {
    imageStyle() {
      return this.showStyle;
    },
    getAspectModel() {
      if (this.fitStyle == "cover") {
        return "aspectFill"
      } else {
        return "aspectFit"
      }
    }
  }

  watch = {
    imagePath(v) {
      this.realImagePath = this.imagePath;
    }
  }

  methods = {
    imageError(e) {
      this.realImagePath = this.placeholderImg;
    }
  }

  beforeCreate() {}

  created() {
    if (this.imagePath) {
      this.realImagePath = this.imagePath;
    } else {
      this.realImagePath = this.placeholderImg;
    }
  }

  beforeMount() {}

  mounted() {

  }

  beforeDestroy() {}

  destroyed() {}
}

export default new QwImage();
</script>

<style >

</style>

<script cml-type="json">
{
		"base": {
				"usingComponents": {
						
				}
		}
}
</script>
